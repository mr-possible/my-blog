name: CI-CD pipeline to AWS
env:
  DEPLOY_PACKAGE_NAME: "my-blog-${{ github.sha }}.zip"
  VERSION_NAME: ${{ github.sha }}

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone on our repo
        uses: actions/checkout@v4

      - name: Set up Python and Install Poetry
        run: pipx install poetry

      - name: Setting up python and caching using Poetry
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install dependencies (using Poetry)
        run: poetry install

      - name: Collect static files
        run: make collect-static

      - name: Create zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION_NAME }}
      - name: Copying file to S3
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ vars.EB_S3_BUCKET_NAME }}/
      - name: Finish
        run: echo "CI part finished successfully"

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION_NAME }}

      - name: Create new EBL app ver
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ vars.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ vars.EB_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "${{ env.VERSION_NAME }}"

      - name: Deploy new app and set environment variables
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ vars.EB_ENVIRONMENT_NAME }} \
            --version-label "${{ env.VERSION_NAME }}" \
            --option-settings \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AWS_ACCESS_KEY_ID,Value="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AWS_SECRET_ACCESS_KEY,Value="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AWS_ACCESS_KEY_FOR_BOTO_S3,Value="${{ secrets.AWS_ACCESS_KEY_FOR_BOTO_S3 }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AWS_SECRET_ACCESS_KEY_FOR_BOTO_S3,Value="${{ secrets.AWS_SECRET_ACCESS_KEY_FOR_BOTO_S3 }}" \
              
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_HOST,Value="${{ secrets.DB_HOST }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_PASSWORD,Value="${{ secrets.DB_PASSWORD }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_PORT,Value="${{ secrets.DB_PORT }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_USERNAME,Value="${{ secrets.DB_USERNAME }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_PASSWORD,Value="${{ secrets.DB_PASSWORD }}" \
              
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DJANGO_SECRET_KEY,Value="${{ secrets.AWS_ACCESS_KEY_FOR_BOTO_S3 }}" \                          
                               
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=APP_ASSETS_S3_BUCKET_NAME,Value="${{ vars.APP_ASSETS_S3_BUCKET_NAME }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=AWS_REGION_NAME,Value="${{ vars.AWS_REGION_NAME }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=EB_APPLICATION_NAME,Value="${{ vars.EB_APPLICATION_NAME }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=EB_ENVIRONMENT_NAME,Value="${{ vars.EB_ENVIRONMENT_NAME }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=EB_S3_BUCKET_NAME,Value="${{ vars.EB_S3_BUCKET_NAME }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=IS_DEVELOPMENT,Value="${{ vars.IS_DEVELOPMENT }}"          

      - name: Finish
        run: echo "CD part finished successfully"